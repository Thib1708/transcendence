version: '3'

networks:
  transcendence:
    name: transcendence

volumes:
  postgres_data:
    driver: local

services:
  nginx:
    build:
      context: ${NGINX_FOLDER}/
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    networks:
      - transcendence
    restart: on-failure

  # django:
  #   build:
  #     context: ${BACK_END_FOLDER}/
  #     dockerfile: Dockerfile
  #   env_file: .env
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - transcendence
  #   restart: on-failure

  # channels:
  #   build: ./${BACK_END_FOLDER}/
  #   env_file: .env
  #   working_dir: /usr/src/app/
  #   command: daphne -u /tmp/daphne.sock pong_game.pong_game.asgi:application
  #   ports:
  #     - "8001:8001"
  #   depends_on:
  #     - django
  #   networks:
  #     - transcendence
  #   restart: on-failure

  django:
    build:
      context: ./${BACK_END_FOLDER}/
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - transcendence
    restart: on-failure

  channels:
    build:
      context: ./${BACK_END_FOLDER}/
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "8001:8001"
    depends_on:
      - django
    networks:
      - transcendence
    restart: on-failure

  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - transcendence
    restart: on-failure

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - transcendence